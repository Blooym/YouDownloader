name: App

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  
jobs:
  ESLint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependancies
      run: npm ci
    - name: Run ESLint
      run: npm run lint

  Make:
    needs: ESLint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        node-version: [ 14.x ]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependancies
      run: npm ci
    - name: Build Application
      run: npm run make
    - name: Get Package Version
      id: package-version
      uses: tyankatsu0105/read-package-version-actions@v1
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v1
      with:
        name: YouDownloader - ${{ matrix.os }}
        path: ${{ github.workspace }}/out/make/zip/win32/x64/youdownloader-win32-x64-${{ steps.package-version.outputs.version }}.zip

  Release:
    needs: Make
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [ windows-latest ]

    steps: 
    - name: Checkout Repository 
      uses: actions/checkout@v2
    - name: Get Package Version
      id: package-version
      uses: tyankatsu0105/read-package-version-actions@v1
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      with:
        path: ${{ github.workspace }}/artifacts
    - name: release 
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Version ${{ steps.package-version.outputs.version }}
        tag_name: v${{ steps.package-version.outputs.version }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}