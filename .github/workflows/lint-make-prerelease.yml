name: App

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  
jobs:
  ESLint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependancies
      run: npm ci
    - name: Run ESLint
      run: npm run lint

  Make:
    needs: ESLint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        node-version: [ 14.x ]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependancies
      run: npm ci
    - name: Build Application
      run: npm run make
    - name: Get Package Version
      id: package-version
      uses: tyankatsu0105/read-package-version-actions@v1
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v1
      with:
        name: YouDownloader-${{ steps.package-version.outputs.version }}-win.zip
        path: ${{ github.workspace }}/out/make/zip/win32/x64/youdownloader-win32-x64-${{ steps.package-version.outputs.version }}.zip

  Pre-Release:
    if: ${{ github.ref == 'refs/heads/main' }} || ${{ github.event_name }} != 'pull_request' 
    needs: Make
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [ windows-latest ]

    steps: 
    - name: Checkout Repository 
      uses: actions/checkout@v2
    - name: Get Package Version
      id: package-version
      uses: tyankatsu0105/read-package-version-actions@v1
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      with:
        path: ${{ github.workspace }}/artifacts
    - name: Update Pre-Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Dev Build - ${{ steps.package-version.outputs.version }}"
        files: |
          artifacts/YouDownloader-${{ steps.package-version.outputs.version }}-win.zip