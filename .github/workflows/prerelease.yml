name: App

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  
jobs:
  # Run Linting 
  Lint:
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
    - name: Checkout Repository
      uses: actions/checkout@v2.3.4
      # Setup Node
    - name: Setup Node.js
      uses: actions/setup-node@v2.3.1
      with:
        node-version: 14.x
        cache: 'npm'


      # Install dependancies
    - name: Install Dependancies
      run: npm ci
      # Run ESLint
    - name: Run ESLint
      run: npm run lint

  # Build the application and upload the artifacts
  Build:
    needs: [ Lint ]
    runs-on: windows-latest
    steps:
      # Checkout Repo
    - name: Checkout Repository
      uses: actions/checkout@v2.3.4

      # Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v2.3.1
      with:
        node-version: 14.x
        cache: 'npm'

      # Install Dependancies
    - name: Install Dependancies
      run: npm ci

      # Build The Application
    - name: Build Application
      run: npm run make

      # Fetch the package.json version
    - name: Get Package Version
      id: package-version
      uses: tyankatsu0105/read-package-version-actions@v1

      # Upload Build Artifact for Pre-Release [Zip]
    - name: Upload Build Artifact [.zip]
      uses: actions/upload-artifact@v1
      with:
        name: YouDownloader-${{ steps.package-version.outputs.version }}-win.zip
        path: ${{ github.workspace }}/out/make/zip/win32/x64/youdownloader-win32-x64-${{ steps.package-version.outputs.version }}.zip

      # Upload Build Artifact for Pre-Release [Exe]
    - name: Upload Build Artifact [.exe]
      uses: actions/upload-artifact@v1
      with:
        name: YouDownloader-${{ steps.package-version.outputs.version }}-win.exe
        path: ${{ github.workspace }}/out/make/squirrel.windows/x64/youdownloader-${{ steps.package-version.outputs.version }} Setup.exe 

  Pre-Release:
    needs: Build
    runs-on: ubuntu-latest

    steps: 
      # Checkout Repo
    - name: Checkout Repository 
      uses: actions/checkout@v2.3.4

      # Fetch the package.json version
    - name: Get Package Version
      id: package-version
      uses: tyankatsu0105/read-package-version-actions@v1

      # Download the Build Artifact from the make job
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      with:
        path: ${{ github.workspace }}/artifacts
      
      # Push to the pre-release tag with the latest commit w/ the built artifact
    - name: Update Pre-Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Dev Build - ${{ steps.package-version.outputs.version }}"
        files: |
          artifacts/YouDownloader-${{ steps.package-version.outputs.version }}-win.zip
          artifacts/YouDownloader-${{ steps.package-version.outputs.version }}-win.exe  